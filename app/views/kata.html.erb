https://www.codewars.com/kata/is-this-my-tail/train/ruby

def correct_tail(body, tail)
  last_letter = body.chars.last

  last_letter == tail
end



https://www.codewars.com/kata/do-i-get-a-bonus/train/ruby

def bonus_time(salary, bonus)
  "$#{bonus ? salary * 10 : salary}"
end



https://www.codewars.com/kata/grasshopper-basic-function-fixer/train/ruby
(Ruby)
def addFive(num)
  res = num + 5
  return res
end

(Javascript)
function addFive(num) {
  var total = num + 5
  return total
}

(Java)
class Solution {
    static int addFive(final int num) {
        return num + 5;
    }
}



https://www.codewars.com/kata/smallest-unused-id/train/ruby

def next_id(arr)
  smallest_id = -1
  sorted_array = arr.sort
  (0..sorted_array.length-1).each do |i|
    p i
    diff = sorted_array[i] - smallest_id
    if diff > 1
      break
    else
      smallest_id = sorted_array[i]
    end
  end
  smallest_id+1
end



https://www.codewars.com/kata/yield-to-the-block/train/ruby

def compute(&block)
  if block
    yield
  else
    "Do not compute"
  end
end



https://www.codewars.com/kata/duck-duck-goose/train/ruby

def duck_duck_goose(players, goose)
  players.cycle.take(goose).last.name
end



https://www.codewars.com/kata/srot-the-inner-ctonnet-in-dsnnieedcg-oredr/train/ruby

def sort_the_inner_content(words)
  words.split.each { |x| x[1..-2] = x[1..-2].chars.sort.reverse.join }.join(' ')
end

https://www.codewars.com/kata/esolang-interpreters-number-1-introduction-to-esolangs-and-my-first-interpreter-ministringfuck/train/ruby

def my_first_interpreter(code)
  counter = 0
  result = ""
  code.chars.each do |char|
    counter += 1 if char == "+"
    result << (counter % 256).chr if char == "."
  end
  result
end

https://www.codewars.com/kata/triple-trouble-2/train/ruby

def triple_trouble(one, two, three)
  one.chars.zip(two.chars, three.chars).join("")
end

https://www.codewars.com/kata/center-of-the-matrix/train/ruby

def center (mat)
  mat[mat.size / 2][mat[0].size / 2] if mat && mat.size.odd? && mat[0].size.odd?
end

https://www.codewars.com/kata/the-if-function/train/ruby

def _if(bool, ifTrue, ifFalse)
  bool ? ifTrue.call : ifFalse.call
end

https://www.codewars.com/kata/repeatit/train
(ruby)

def repeat_it(string,n)
  string.is_a?(String) ? string*n : "Not a string"
end

(JS)

var repeatIt = function(str, n) {
  return typeof str === 'string' ? Array(n+1).join(str) : 'Not a string';
}

https://www.codewars.com/kata/is-it-even/train/ruby

def test_even(n)
  if n % 2 == 0
    return true
  else
    return false
  end
end

https://www.codewars.com/kata/559ac78160f0be07c200005a

def
  name_shuffler(str) str.split(" ").reverse.join(" ")
end

https://www.codewars.com/kata/a-function-within-a-function/train/ruby

(JS)
function always (n) {
  return () => n;
}

(Ruby)
def always(n=nil)
  lambda { n }
end

## First attempt at a level 6 kyu
## It took me all afternoon and a ton of googling and looking back on notes
https://www.codewars.com/kata/format-a-string-of-names-like-bart-lisa-and-maggie/train/ruby

def list(names)
  return '' if names.nil? || names.empty?
  names = names.map { |name| name[:name] }
  names.one? ? names.first : "#{names[0...-1].join(', ')} & #{names.last}"
end

https://www.codewars.com/kata/rock-paper-scissors/train/ruby

win = {
  'rock' => 'scissors', 'scissors' => 'paper', 'paper' => 'rock'
}
  return 'Draw!' if p1 == p2
  win[p1] == p2 ? 'Player one won!' : 'Player two won!'
  end
end

https://www.codewars.com/kata/common-denominators/train/ruby

def convertFracts(lst)
  lcm = lst.reduce(1) { |x,y| x.lcm(y[1]) }
  lst.map { |x| [lcm/x[1]*x[0], lcm] }
end

https://www.codewars.com/kata/parse-nice-int-from-char-problem/train/ruby
##probably the fastest i've ever solved a kata
def get_age(age)
  age.to_i
end

https://www.codewars.com/kata/find-sum-of-top-left-to-bottom-right-diagonals/train/ruby

def diagonalSum(matrix)
  count = 0
  result = 0
  while count < matrix.length
    result += matrix[count][count]
    count += 1
  end
  result
end


https://www.codewars.com/kata/80-s-kids-number-1-how-many-licks-does-it-take/train/ruby

def total_licks(env)
  env.any? && env.values.max > 0 ? str = " The toughest challenge was #{env.key(env.values.max)}." : str = ''
  "It took #{252 + env.values.inject(0, :+)} licks to get to the tootsie roll center of a tootsie pop." + str
end

https://www.codewars.com/kata/80-s-kids-number-5-you-cant-do-that-on-television/train/ruby

def bucket_of(said)
  water = /water|wet|wash/i === said
  slime = /slime|i don't know/i === said

  if water && slime
    "sludge"
  elsif slime
    "slime"
  elsif water
    "water"
  else
    "air"
  end
end

https://www.codewars.com/kata/opposite-number/train/ruby

def opposite num
 -num
end

https://www.codewars.com/kata/function-3-multiplying-two-numbers/train/ruby

def multiply(x, y)
  x * y
end

https://www.codewars.com/kata/noobcode-01-supersize-me-dot-dot-dot-or-rather-this-integer/train/ruby

def super_size(n)
  n.to_s.chars.sort.reverse.join.to_i
end

https://www.codewars.com/kata/i-love-you-a-little-a-lot-passionately-dot-dot-dot-not-at-all

def how_much_i_love_you(nb_petals)
phrase = ["I love you", "a little", "a lot", "passionately", "madly", "not at all"]
list = (nb_petals - 1) % 6

phrase[list]
end


https://www.codewars.com/kata/sentence-smash/train/ruby

def smash(words)
  words.join' '
end
