https://www.codewars.com/kata/is-this-my-tail/train/ruby

def correct_tail(body, tail)
  last_letter = body.chars.last

  last_letter == tail
end



https://www.codewars.com/kata/do-i-get-a-bonus/train/ruby

def bonus_time(salary, bonus)
  "$#{bonus ? salary * 10 : salary}"
end



https://www.codewars.com/kata/grasshopper-basic-function-fixer/train/ruby
(Ruby)
def addFive(num)
  res = num + 5
  return res
end

(Javascript)
function addFive(num) {
  var total = num + 5
  return total
}

(Java)
class Solution {
    static int addFive(final int num) {
        return num + 5;
    }
}



https://www.codewars.com/kata/smallest-unused-id/train/ruby

def next_id(arr)
  smallest_id = -1
  sorted_array = arr.sort
  (0..sorted_array.length-1).each do |i|
    p i
    diff = sorted_array[i] - smallest_id
    if diff > 1
      break
    else
      smallest_id = sorted_array[i]
    end
  end
  smallest_id+1
end



https://www.codewars.com/kata/yield-to-the-block/train/ruby

def compute(&block)
  if block
    yield
  else
    "Do not compute"
  end
end



https://www.codewars.com/kata/duck-duck-goose/train/ruby

def duck_duck_goose(players, goose)
  players.cycle.take(goose).last.name
end



https://www.codewars.com/kata/srot-the-inner-ctonnet-in-dsnnieedcg-oredr/train/ruby

def sort_the_inner_content(words)
  words.split.each { |x| x[1..-2] = x[1..-2].chars.sort.reverse.join }.join(' ')
end

https://www.codewars.com/kata/esolang-interpreters-number-1-introduction-to-esolangs-and-my-first-interpreter-ministringfuck/train/ruby

def my_first_interpreter(code)
  counter = 0
  result = ""
  code.chars.each do |char|
    counter += 1 if char == "+"
    result << (counter % 256).chr if char == "."
  end
  result
end

https://www.codewars.com/kata/triple-trouble-2/train/ruby

def triple_trouble(one, two, three)
  one.chars.zip(two.chars, three.chars).join("")
end

https://www.codewars.com/kata/center-of-the-matrix/train/ruby

def center (mat)
  mat[mat.size / 2][mat[0].size / 2] if mat && mat.size.odd? && mat[0].size.odd?
end

https://www.codewars.com/kata/the-if-function/train/ruby

def _if(bool, ifTrue, ifFalse)
  bool ? ifTrue.call : ifFalse.call
end

https://www.codewars.com/kata/repeatit/train

def repeat_it(string,n)
  string.is_a?(String) ? string*n : "Not a string"
end
