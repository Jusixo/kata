https://www.codewars.com/kata/is-this-my-tail/train/ruby
Solution:

def correct_tail(body, tail)
  last_letter = body.chars.last

  last_letter == tail
end

https://www.codewars.com/kata/do-i-get-a-bonus/train/ruby
Solution:

def bonus_time(salary, bonus)
  "$#{bonus ? salary * 10 : salary}"
end

https://www.codewars.com/kata/grasshopper-basic-function-fixer/train/ruby
Solutions:

(Ruby)
def addFive(num)
  res = num + 5
  return res
end

(Javascript)
function addFive(num) {
  var total = num + 5
  return total
}

(Java)
class Solution {
    static int addFive(final int num) {
        return num + 5;
    }
}

https://www.codewars.com/kata/smallest-unused-id/train/ruby
Solution:

def next_id(arr)
  smallest_id = -1
  sorted_array = arr.sort
  (0..sorted_array.length-1).each do |i|
    p i
    diff = sorted_array[i] - smallest_id
    if diff > 1
      break
    else
      smallest_id = sorted_array[i]
    end
  end
  smallest_id+1
end

https://www.codewars.com/kata/yield-to-the-block/train/ruby
Solution:

def compute(&block)
  if block
    yield
  else
    "Do not compute"
  end
end

https://www.codewars.com/kata/duck-duck-goose/train/ruby
Solution:

def duck_duck_goose(players, goose)
  players.cycle.take(goose).last.name
end

https://www.codewars.com/kata/srot-the-inner-ctonnet-in-dsnnieedcg-oredr/train/ruby
Solution:

def sort_the_inner_content(words)
  words.split.each { |x| x[1..-2] = x[1..-2].chars.sort.reverse.join }.join(' ')
end

https://www.codewars.com/kata/esolang-interpreters-number-1-introduction-to-esolangs-and-my-first-interpreter-ministringfuck/train/ruby
Solution:

def my_first_interpreter(code)
  counter = 0
  result = ""
  code.chars.each do |char|
    counter += 1 if char == "+"
    result << (counter % 256).chr if char == "."
  end
  result
end

https://www.codewars.com/kata/triple-trouble-2/train/ruby
Solution:

def triple_trouble(one, two, three)
  one.chars.zip(two.chars, three.chars).join("")
end

https://www.codewars.com/kata/center-of-the-matrix/train/ruby
Solution:

def center (mat)
  mat[mat.size / 2][mat[0].size / 2] if mat && mat.size.odd? && mat[0].size.odd?
end

https://www.codewars.com/kata/the-if-function/train/ruby
Solution:

def _if(bool, ifTrue, ifFalse)
  bool ? ifTrue.call : ifFalse.call
end

https://www.codewars.com/kata/repeatit/train
Solutions:

(ruby)

def repeat_it(string,n)
  string.is_a?(String) ? string*n : "Not a string"
end

(JS)

var repeatIt = function(str, n) {
  return typeof str === 'string' ? Array(n+1).join(str) : 'Not a string';
}

https://www.codewars.com/kata/is-it-even/train/ruby
Solution:

def test_even(n)
  if n % 2 == 0
    return true
  else
    return false
  end
end

https://www.codewars.com/kata/559ac78160f0be07c200005a
Solution:

def
  name_shuffler(str) str.split(" ").reverse.join(" ")
end

https://www.codewars.com/kata/a-function-within-a-function/train/ruby
Solutions:

(JS)
function always (n) {
  return () => n;
}

(Ruby)
def always(n=nil)
  lambda { n }
end

## First attempt at a level 6 kyu
## It took me all afternoon and a ton of googling and looking back on notes
https://www.codewars.com/kata/format-a-string-of-names-like-bart-lisa-and-maggie/train/ruby
Solution:

def list(names)
  return '' if names.nil? || names.empty?
  names = names.map { |name| name[:name] }
  names.one? ? names.first : "#{names[0...-1].join(', ')} & #{names.last}"
end

https://www.codewars.com/kata/rock-paper-scissors/train/ruby
Solution:

win = {
  'rock' => 'scissors', 'scissors' => 'paper', 'paper' => 'rock'
}
  return 'Draw!' if p1 == p2
  win[p1] == p2 ? 'Player one won!' : 'Player two won!'
  end
end

https://www.codewars.com/kata/common-denominators/train/ruby
Solution:

def convertFracts(lst)
  lcm = lst.reduce(1) { |x,y| x.lcm(y[1]) }
  lst.map { |x| [lcm/x[1]*x[0], lcm] }
end

https://www.codewars.com/kata/parse-nice-int-from-char-problem/train/ruby
Solution:

##probably the fastest i've ever solved a kata
def get_age(age)
  age.to_i
end

https://www.codewars.com/kata/find-sum-of-top-left-to-bottom-right-diagonals/train/ruby
Solution:

def diagonalSum(matrix)
  count = 0
  result = 0
  while count < matrix.length
    result += matrix[count][count]
    count += 1
  end
  result
end


https://www.codewars.com/kata/80-s-kids-number-1-how-many-licks-does-it-take/train/ruby
Solution:

def total_licks(env)
  env.any? && env.values.max > 0 ? str = " The toughest challenge was #{env.key(env.values.max)}." : str = ''
  "It took #{252 + env.values.inject(0, :+)} licks to get to the tootsie roll center of a tootsie pop." + str
end

https://www.codewars.com/kata/80-s-kids-number-5-you-cant-do-that-on-television/train/ruby
Solution:

def bucket_of(said)
  water = /water|wet|wash/i === said
  slime = /slime|i don't know/i === said

  if water && slime
    "sludge"
  elsif slime
    "slime"
  elsif water
    "water"
  else
    "air"
  end
end

https://www.codewars.com/kata/opposite-number/train/ruby
Solution:

def opposite num
 -num
end

https://www.codewars.com/kata/function-3-multiplying-two-numbers/train/ruby
Solution:

def multiply(x, y)
  x * y
end

https://www.codewars.com/kata/noobcode-01-supersize-me-dot-dot-dot-or-rather-this-integer/train/ruby
Solution:

def super_size(n)
  n.to_s.chars.sort.reverse.join.to_i
end

https://www.codewars.com/kata/i-love-you-a-little-a-lot-passionately-dot-dot-dot-not-at-all
Solution:

def how_much_i_love_you(nb_petals)
phrase = ["I love you", "a little", "a lot", "passionately", "madly", "not at all"]
list = (nb_petals - 1) % 6

phrase[list]
end


https://www.codewars.com/kata/sentence-smash/train/ruby
Solution:

def smash(words)
  words.join' '
end


https://www.codewars.com/kata/heads-and-legs/train/ruby
Solution:

def animals(heads, legs)
  cow = (legs - 2 * heads)/2.0
  chicken = heads - cow

  chicken < 0 || cow < 0 ? "No solutions" : cow.to_i == cow ? [chicken, cow] : "No solutions"
end

https://www.codewars.com/kata/remove-string-spaces/train/ruby
Solution:

def no_space(x)
  x.gsub(/[[:space:]]/, '')
end


https://www.codewars.com/kata/fizz-buzz/train/ruby
Solution:

def fizzbuzz(n)
  return_val = []
  1.upto(n) do |a|
     val = ""
     val += "Fizz" if a % 3 == 0
     val += "Buzz" if a % 5 == 0
     val == "" ? return_val << a : return_val << val
  end
  return_val
end


https://www.codewars.com/kata/ninety-nine-thousand-nine-hundred-ninety-nine/solutions?show-solutions=1
  Solution:

  def in_words(int)
    numbers_to_name = {
        1000000 => "million",
        1000 => "thousand",
        100 => "hundred",
        90 => "ninety",
        80 => "eighty",
        70 => "seventy",
        60 => "sixty",
        50 => "fifty",
        40 => "forty",
        30 => "thirty",
        20 => "twenty",
        19=>"nineteen",
        18=>"eighteen",
        17=>"seventeen",
        16=>"sixteen",
        15=>"fifteen",
        14=>"fourteen",
        13=>"thirteen",
        12=>"twelve",
        11 => "eleven",
        10 => "ten",
        9 => "nine",
        8 => "eight",
        7 => "seven",
        6 => "six",
        5 => "five",
        4 => "four",
        3 => "three",
        2 => "two",
        1 => "one"
    }
    str = ""
    numbers_to_name.each do |num, name|
      if int == 0
        return str
      elsif int.to_s.length == 1 && int/num > 0
        return str + "#{name}"
      elsif int < 100 && int/num > 0
        return str + "#{name}" if int%num == 0
        return str + "#{name} " + in_words(int%num)
      elsif int/num > 0
        return str + in_words(int/num) + " #{name} " + in_words(int%num)
      end
    end
  end

  def number_to_english(num)
    return '' unless num.is_a? Integer
    return 'zero' if num==0
    return (in_words(num)).strip if num <= 99999 && num > 0
    return ''
  end


https://www.codewars.com/kata/5629db57620258aa9d000014/solutions/ruby
  solutions:

    def mix(s1, s2)
      selection = ('a'..'z').to_a.select { |letter| s1.count(letter) > 1 || s2.count(letter) > 1 }
      selection.map! do |selection|
        if s1.count(selection) > s2.count(selection)
          "1:#{selection * s1.count(selection)}"
        elsif s1.count(selection) < s2.count(selection)
          "2:#{selection * s2.count(selection)}"
        else
          "=:#{selection * s1.count(selection)}"
        end
      end
      selection.sort_by { |x| [-x.size, x[0], x[-1]] }.join("/")
    end

https://www.codewars.com/kata/sum-of-a-nested-list/train/ruby
  solution:

      def sum_nested(lst)
        lst.flatten.inject(:+).to_i
      end

https://www.codewars.com/kata/57a0556c7cb1f31ab3000ad7/solutions/ruby
  solution:

    def make_upper_case(str)
      str.upcase
    end

https://www.codewars.com/kata/swap-the-head-and-the-tail

  Solution:

    def swap_head_tail arr
        swapped_array = []
        if arr.length.odd?
          swapped_array << arr[(arr.length/2 + 1)..-1]
          swapped_array << arr[arr.length/2]
          swapped_array << arr[0...arr.length/2]
         else
          swapped_array << arr[arr.length/2..-1]
          swapped_array << arr[0...arr.length/2]
         end

        swapped_array.flatten
    end

https://www.codewars.com/kata/man-in-the-west/train/ruby

  Solution:

    def check_the_bucket(bucket)
      bucket.include? 'gold'
    end


  (recent move has caused me to slack a bit on my git updating
  so am going to attempt to do a couple of katas a day for the next few days)

https://www.codewars.com/kata/55685cd7ad70877c23000102/train/ruby

  Solution:

    def makeNegative(num)
        -num.abs
    end

https://www.codewars.com/kata/count-vowels-in-a-string/train/ruby

  very undefined cases that i needed to solve, refused to do a multiliner for it.

  Solution:

    def count_vowels(str='')
      str.scan(/[aeiouAEIOU]/).size rescue nil
    end

https://www.codewars.com/kata/52b305bec65ea40fe90007a7/train/ruby
  *level 6*
  Solution:

    def grabscrab anagram, dictionary
      dictionary.select { |word| anagram.split('').sort == word.split('').sort }
    end
